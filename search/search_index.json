{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4e2a\u4eba\u5b66\u4e60\u7b14\u8bb0\u4e0e\u5de5\u4f5c\u7ecf\u9a8c\u603b\u7ed3 \u00b6 \u7b14\u8bb0\u4e3b\u8981\u5305\u542b\u4e0b\u9762\u51e0\u4e2a\u90e8\u5206 Go\u8bed\u8a00 \u4e91\u539f\u751f\uff08k8s\u3001Runtime\u3001Rook\u3001CICD\u7b49\uff09 DevOps \u5176\u4ed6\u6280\u672f\u70b9\u7684\u5fc3\u5f97\u4f53\u4f1a\u7b49\u3002 \u58f0\u660e \u8be5\u7cfb\u5217\u7b14\u8bb0\u662f\u6211\u4e2a\u4eba\u5b66\u4e60\u4e0e\u5de5\u4f5c\u603b\u7ed3\uff0c\u4e3b\u8981\u7528\u4e8e\u603b\u7ed3\u3001\u5907\u5fd8\uff0c\u884c\u6587\u903b\u8f91\u4e0a\u6ca1\u6709\u505a\u8fc7\u7cbe\u7ec6\u68b3\u7406\u3002\u7b14\u8bb0\u4e2d\u5982\u679c\u6709\u5f15\u7528\u4ed6\u4eba\u7ecf\u9a8c\u6216\u8005\u6458\u5f55\u5b98\u7f51\uff0c\u6211\u57fa\u672c\u4f1a\u505a\u6807\u6ce8\u3002 \u5982\u679c\u60a8\u770b\u5230\u4e86\u8fd9\u4e9b\u535a\u5ba2\uff0c\u53d1\u73b0\u6709\u4fb5\u6743\u884c\u4e3a\uff0c\u8bf7\u53ca\u65f6\u544a\u77e5\u6211\u5220\u9664\uff1b\u5982\u679c\u60a8\u53d1\u73b0\u6709\u9519\u8bef\u6216\u8005\u8ff7\u60d1\u7684\u5730\u65b9\u9ebb\u70e6\u60a8\u63d0\u4e2aPR\u6216\u8005\u7ed9\u6211\u53d1\u90ae\u4ef6\u4ea4\u6d41\uff08 renxiaoweimail@163.com \uff09\uff1b\u5982\u679c\u8fd9\u4e9b\u535a\u5ba2\u5bf9\u60a8\u6709\u7528\uff0c\u60a8\u4e5f\u53ef\u4ee5\u70b9\u4e2astar\u6216\u8005\u7ed9\u6211\u53d1\u4e2a\u90ae\u4ef6\u4e00\u8d77\u4ea4\u6d41\u6280\u672f\u3002 \u5728\u8fd9\u91cc\u8bf4\u4e00\u58f0\u8c22\u8c22\uff0c\u8c22\u8c22\u60a8\u7684\u5305\u5bb9\u4e0e\u6307\u5bfc\u3002\u8ba9\u6211\u4eec\u5171\u540c\u8fdb\u6b65\uff0c\u5229\u4ed6\u4eba\u8005\u7ec8\u5c06\u5229\u5df1\uff01","title":"1. \u8bf4\u660e"},{"location":"#_1","text":"\u7b14\u8bb0\u4e3b\u8981\u5305\u542b\u4e0b\u9762\u51e0\u4e2a\u90e8\u5206 Go\u8bed\u8a00 \u4e91\u539f\u751f\uff08k8s\u3001Runtime\u3001Rook\u3001CICD\u7b49\uff09 DevOps \u5176\u4ed6\u6280\u672f\u70b9\u7684\u5fc3\u5f97\u4f53\u4f1a\u7b49\u3002 \u58f0\u660e \u8be5\u7cfb\u5217\u7b14\u8bb0\u662f\u6211\u4e2a\u4eba\u5b66\u4e60\u4e0e\u5de5\u4f5c\u603b\u7ed3\uff0c\u4e3b\u8981\u7528\u4e8e\u603b\u7ed3\u3001\u5907\u5fd8\uff0c\u884c\u6587\u903b\u8f91\u4e0a\u6ca1\u6709\u505a\u8fc7\u7cbe\u7ec6\u68b3\u7406\u3002\u7b14\u8bb0\u4e2d\u5982\u679c\u6709\u5f15\u7528\u4ed6\u4eba\u7ecf\u9a8c\u6216\u8005\u6458\u5f55\u5b98\u7f51\uff0c\u6211\u57fa\u672c\u4f1a\u505a\u6807\u6ce8\u3002 \u5982\u679c\u60a8\u770b\u5230\u4e86\u8fd9\u4e9b\u535a\u5ba2\uff0c\u53d1\u73b0\u6709\u4fb5\u6743\u884c\u4e3a\uff0c\u8bf7\u53ca\u65f6\u544a\u77e5\u6211\u5220\u9664\uff1b\u5982\u679c\u60a8\u53d1\u73b0\u6709\u9519\u8bef\u6216\u8005\u8ff7\u60d1\u7684\u5730\u65b9\u9ebb\u70e6\u60a8\u63d0\u4e2aPR\u6216\u8005\u7ed9\u6211\u53d1\u90ae\u4ef6\u4ea4\u6d41\uff08 renxiaoweimail@163.com \uff09\uff1b\u5982\u679c\u8fd9\u4e9b\u535a\u5ba2\u5bf9\u60a8\u6709\u7528\uff0c\u60a8\u4e5f\u53ef\u4ee5\u70b9\u4e2astar\u6216\u8005\u7ed9\u6211\u53d1\u4e2a\u90ae\u4ef6\u4e00\u8d77\u4ea4\u6d41\u6280\u672f\u3002 \u5728\u8fd9\u91cc\u8bf4\u4e00\u58f0\u8c22\u8c22\uff0c\u8c22\u8c22\u60a8\u7684\u5305\u5bb9\u4e0e\u6307\u5bfc\u3002\u8ba9\u6211\u4eec\u5171\u540c\u8fdb\u6b65\uff0c\u5229\u4ed6\u4eba\u8005\u7ec8\u5c06\u5229\u5df1\uff01","title":"\u4e2a\u4eba\u5b66\u4e60\u7b14\u8bb0\u4e0e\u5de5\u4f5c\u7ecf\u9a8c\u603b\u7ed3"},{"location":"devops/","text":"\u4e3b\u8981\u8bb0\u5f55cicd\u3001\u81ea\u52a8\u5316\u811a\u672c\u4ee5\u53cadevops\u5de5\u5177\u7684\u8e29\u5751\u7ecf\u5386\u3002 \u00b6 \u5185\u5bb9\u4e3b\u8981\u5305\u62ec\u4e0b\u9762\u51e0\u4e2a\u90e8\u5206\uff1a cicd\u5de5\u5177\u3002 \u81ea\u52a8\u5316\u811a\u672c\u3002 devops\u5b9e\u8df5\u5fc3\u5f97\u7b49\u3002","title":"1. \u6982\u89c8"},{"location":"devops/#cicddevops","text":"\u5185\u5bb9\u4e3b\u8981\u5305\u62ec\u4e0b\u9762\u51e0\u4e2a\u90e8\u5206\uff1a cicd\u5de5\u5177\u3002 \u81ea\u52a8\u5316\u811a\u672c\u3002 devops\u5b9e\u8df5\u5fc3\u5f97\u7b49\u3002","title":"\u4e3b\u8981\u8bb0\u5f55cicd\u3001\u81ea\u52a8\u5316\u811a\u672c\u4ee5\u53cadevops\u5de5\u5177\u7684\u8e29\u5751\u7ecf\u5386\u3002"},{"location":"devops/gitlab-ci_kustomize%E8%B8%A9%E5%9D%91/","text":"\u80cc\u666f \u00b6 cicd\u914d\u7f6e\u6587\u4ef6\u5199\u7684\u8d8a\u6765\u8d8a\u591a\uff0c\u8d8a\u6765\u8d8a\u81c3\u80bf\u4e86\uff0c\u4eca\u5929\u60f3\u4f18\u5316\uff0c\u5c06\u516c\u5171\u914d\u7f6e\u62bd\u8c61\u51fa\u6765\uff0c\u6ca1\u60f3\u5230\u5728\u7b80\u5316kustomize\u914d\u7f6e\u65f6\u9047\u5230\u4e86ArgoCD App\u65e0\u6cd5\u751f\u6210\u7684\u95ee\u9898\uff0c\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u6700\u7ec8\u5b9a\u4f4d\u51fa\u539f\u6765\u662f\u6d4b\u8bd5\u73af\u5883\u96c6\u7fa4\u7684kubeconfig\u6ca1\u6709\u914d\u7f6e\u5bfc\u81f4\uff0c\u5728\u6b64\u505a\u4e2a\u8bb0\u5f55\u3002 CICD\u67b6\u6784\u7b80\u4ecb \u00b6 \u901a\u8fc7gitlab-ci.yml\u914d\u7f6e\u6587\u4ef6\u5b9a\u4e49ci\u3001cd\u5168\u94fe\u8def\uff0c\u76ee\u524d\u5df2\u7ecf\u5c06\u5171\u6027\u7684\u914d\u7f6e\u72ec\u7acb\u51fa\u53bb\u4e86\uff08\u5982\uff1amaven\u6784\u5efa\u3001sonar\u626b\u63cf\u3001argocd app\u7684\u521b\u5efa\u7b49\uff09\u6d4b\u8bd5\u3001\u7ebf\u4e0a\u73af\u5883\u5404\u4e00\u5957k8s\u96c6\u7fa4\uff0cArgoCD\u90e8\u7f72\u5728\u6d4b\u8bd5\u73af\u5883k8s\u96c6\u7fa4\u4e2d\uff0c\u8be5ArgoCD\u540c\u65f6\u7ba1\u7406\u6d4b\u8bd5\u4e0e\u7ebf\u4e0ak8s\u96c6\u7fa4\u3002 \u95ee\u9898 \u4eca\u5929\u9047\u5230\u7684\u95ee\u9898\u662f\uff1a\u6d4b\u8bd5\u73af\u5883\u7684ArgoCD app\u53ef\u4ee5\u81ea\u52a8\u751f\u6210\uff0c\u7ebf\u4e0a\u73af\u5883\u7684ArgoCD app\u4e0d\u80fd\u751f\u6210\uff0c\u5e76\u4e14\u62a5\u4e86\u4e0b\u9762\u9519\u8bef\uff1a # \u6267\u884c\u547d\u4ee4 kustomize build | kubectl apply -f - # \u62a5\u4e86\u4e0b\u9762\u9519\u8bef error: json: cannot unmarshal object into Go struct field Kustomization.patchesStrategicMerge of type patch.StrategicMerge # \u4ee5\u53ca\u4e0b\u9762\u62a5\u9519 error: unable to recognize \"STDIN\": no matches for kind \"Application\" in version \"argoproj.io/v1alpha1\" \u6700\u5f00\u59cb\u4ee5\u4e3a\u662fArgoCD\u7684bug\uff0c\u5728\u8c37\u6b4c\u4e0a\u641c\u7d22\u4e86\u95ee\u9898\uff0c\u67e5\u5230\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u7684\u62a5\u9519\uff0c\u4e0d\u8fc7\u90a3\u4e2abug\u662fArgoCD1.2\u7248\u672c\u7684\uff0c\u6211\u4eec\u7528\u7684\u662f2.1\u7248\u672c\u7684\uff0c\u8be5bug\u65e9\u5df2\u4fee\u590d\uff0c\u6240\u4ee5\u6392\u9664\u4e86ArgoCD\u7684\u62a5\u9519\uff1b\u540e\u6765\u6000\u7591\u662fkustomize\u6f0f\u6d1e\uff0c\u5728\u7535\u8111\u4e0a\u6a21\u62df\u6267\u884ckustomize\u547d\u4ee4\u53ef\u4ee5\u751f\u6210ArgoCD app\u6587\u4ef6\uff0c\u5e76\u4e14kustomize\u76ee\u524d\u5df2\u7ecf\u5f88\u6210\u719f\u4e86\u4e0d\u53ef\u80fd\u4f1a\u6709\u8fd9\u79cdbug\uff0c\u6392\u9664\u4e86kustomize\u95ee\u9898\u3002 \u6700\u540e\u6211\u628a\u6574\u4e2ayaml\u6587\u4ef6\u9010\u884c\u8bfb\u4e86\u4e00\u904d\uff0c\u53d1\u73b0\u751f\u6210\u7ebf\u4e0ak8s\u7684ArgoCD App\u7684yaml\u7528\u7684\u662f\u7ebf\u4e0a\u73af\u5883k8s\u7684KUBECONFIG\u6587\u4ef6\uff0c\u7136\u800cArgoCD\u662f\u90e8\u7f72\u5728\u6d4b\u8bd5\u73af\u5883\u7684k8s\u96c6\u7fa4\u4e0a\uff0c\u8fd9\u5c31\u5bfc\u81f4kubectl\u8fde\u63a5\u4e0d\u4e86\u6d4b\u8bd5\u73af\u5883k8s\u96c6\u7fa4\uff0c\u4e5f\u5c31\u751f\u6210\u4e0d\u4e86\u7ebf\u4e0ak8s\u7684ArgoCD\u7684App\u3002 yaml\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a # java-deployment.yml # template # \u4e0b\u9762\u5e26\u201c#\u201d\u7684\u201cecho $IN_KUBE_CONFIG ...\u201d\u4e00\u884c\u662f\u4e4b\u524d\u6ca1\u6709\u52a0\u7684\uff0c\u8fd9\u4f1a\u5bfc\u81f4KUBECONFIG\u4f7f\u7528\u9519\u8bef\u3002 .deploy: image: ${DEV_REGISTRY_HOST}/basic/deploy-tools:v2.0 variables: GIT_STRATEGY: none ENV_NAME: dev-xx # replace CD_GIT_PATH: dev # replace K8S_CLUSTER: https://xxx # replace: $INSIDE_K8S_CLUSTER or $CCE2 APP_CONFIG: \"xxx\" # repalce CD_GIT_BRANCH: $ENV_NAME K8S_NS: ${BUSINESS_NAME}-${ENV_NAME} IN_HARBOR_SECRET: xxx-xx.yaml PROD_HARBOR_SECRET: xxx-xxx.yaml IN_KUBE_CONFIG: $kube_xxx PROD_KUBE_CONFIG: $kube_yyy tags: - k8s before_script: - git init - git config --global user.email \"gitlab@git.k8s.local\" - git config --global user.name \"GitLab CI/CD\" script: - git clone https://${CI_USERNAME}:${CI_PASSWORD}@$CD_REPO - cd $APP_NAME - git checkout -B $CD_GIT_BRANCH - sed -ri \"s/Tag[^*]*/Tag kube.${ENV_NAME}.${APP_NAME}/\" base/fluent-bit-sidecar-config.yaml - sed -i \"s@APP_CONFIG@${APP_CONFIG}@g\" base/jvm_opts_patch.yaml - sed -i \"s@NAMESERVERS@${DNS}@g\" base/custom_env_patch.yaml - cd overlays/$CD_GIT_PATH - > if [ \"$CD_GIT_PATH\" == \"pre\" ] || [ \"$CD_GIT_PATH\" == \"prod\" ]; then kustomize edit set image registry=${PROD_REGISTRY_HOST}/$REGISTRY_GROUP/$REGISTRY_IMAGE kustomize edit set image registry-fluent=${PROD_REGISTRY_HOST}/public/efk/fluent/fluent-bit:latest else kustomize edit set image registry=${DEV_REGISTRY_HOST}/$REGISTRY_GROUP/$REGISTRY_IMAGE kustomize edit set image registry-fluent=${DEV_REGISTRY_HOST}/public/efk/fluent/fluent-bit:latest fi - git add . - git commit -am \"[skip ci] image update tag:${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}(pipeline-hash)\" || /bin/true - git push origin $CD_GIT_BRANCH -f after_script: - echo \"ARGO_PROJ:$ARGO_PROJ\" - git clone https://${CI_USERNAME}:${CI_PASSWORD}@git.xx.cn/deployments/base.git - git checkout -B master - > if [ \"$CD_GIT_PATH\" == \"pre\" ] || [ \"$CD_GIT_PATH\" == \"prod\" ]; then echo $PROD_KUBE_CONFIG |base64 -d > $KUBECONFIG && export KUBECONFIG=$KUBECONFIG kubectl create namespace $K8S_NS || /bin/true kubectl apply -f base/java-base/$PROD_HARBOR_SECRET -n $K8S_NS # echo $IN_KUBE_CONFIG |base64 -d > $KUBECONFIG && export KUBECONFIG=$KUBECONFIG else echo $IN_KUBE_CONFIG |base64 -d > $KUBECONFIG && export KUBECONFIG=$KUBECONFIG kubectl create namespace $K8S_NS || /bin/true kubectl apply -f base/java-base/$IN_HARBOR_SECRET -n $K8S_NS fi - | cat <<EOF >./kustomization.yaml apiVersion: kustomize.config.k8s.io/v1beta1 kind: Kustomization resources: - base/java-base/argo-application.yaml patches: - patch: | - op: replace path: /metadata/name value: ${APP_NAME}-${ENV_NAME} - op: replace path: /metadata/labels/app value: ${APP_NAME} - op: replace path: /spec/project value: $ARGO_PROJ - op: replace path: /spec/source/repoURL value: https://$CD_REPO - op: replace path: /spec/source/targetRevision value: $CD_GIT_BRANCH - op: replace path: /spec/source/path value: overlays/$CD_GIT_PATH - op: replace path: /spec/destination/server value: $K8S_CLUSTER - op: replace path: /spec/destination/namespace value: $K8S_NS target: kind: Application EOF - kustomize build | kubectl apply -f - - > if [ \"$CD_GIT_PATH\" == \"dev\" ] || [ \"$CD_GIT_PATH\" == \"testing\" ]; then echo y |argocd login $ARGOCD_IP --username $ARGCD_USER --password $ARGOCD_PASSWD --insecure argocd app sync ${APP_NAME}-${ENV_NAME} fi \u51e0\u70b9\u601d\u8003 \u00b6 \u4e8b\u60c5\u672c\u8eab\u7684\u601d\u8003 \u95ee\u9898\u867d\u5c0f\u5374\u4e5f\u82b1\u4e86\u4e0d\u5c11\u65f6\u95f4\u5728\u6392\u67e5\u4e0a\uff0c\u9020\u6210\u8fd9\u4e2a\u95ee\u9898\u7684\u539f\u56e0\u662f\u914d\u7f6e\u6587\u4ef6\u592a\u4e71\uff0c\u8fd9\u662f\u4e4b\u524d\u6211\u4e3a\u4e86\u8d76\u8fdb\u5ea6\u7ed9\u81ea\u5df1\u6316\u7684\u5751\u3002 \u914d\u7f6e\u7f3a\u5c11\u6ce8\u91ca\uff0c\u8fd9\u4e5f\u7ed9\u5b9a\u4f4d\u95ee\u9898\u5e26\u6765\u4e86\u56f0\u96be\u3002 \u914d\u7f6e\u6587\u4ef6\u7684\u601d\u8003 \u914d\u7f6e\u6587\u4ef6\u8f83\u591a\uff0c\u53d1\u7248\u914d\u7f6e\u5f88\u591a\uff1a\u5f00\u53d1\u4e0e\u6d4b\u8bd5\u73af\u5883\u75281\u4e2a\u914d\u7f6e\uff0cuat\u73af\u5883\u75281\u5404\u914d\u7f6e\uff0c\u9884\u53d1\u4e0e\u751f\u4ea7\u73af\u5883\u75281\u4e2a\u914d\u7f6e\uff0c\u5404\u73af\u5883\u5927\u90e8\u5206\u914d\u7f6e\u76f8\u540c\uff0c\u4f46\u6070\u597d\u662f\u90a3\u4e9b\u5c11\u90e8\u5206\u4e0d\u540c\u7684\u914d\u7f6e\u7ed9\u6211\u4eca\u5929\u7684\u4f18\u5316\u57cb\u4e86\u5751\u3002 \u4e0a\u9762\u7684yaml\u6587\u4ef6\u4ecd\u6709\u5730\u65b9\u9700\u8981\u4f18\u5316\uff0c\u8fd8\u53ef\u4ee5\u5c06\u5171\u6027\u90e8\u5206\u62bd\u8c61\u6210\u516c\u5171\u90e8\u5206\u3002 \u5373\u4f7f\u7528\u4e86kustomize\u5de5\u5177\u7ba1\u7406\u914d\u7f6e\uff0ccicd\u5168\u94fe\u8def\u7684\u914d\u7f6e\u4ecd\u7136\u5f88\u591a\u5f88\u7e41\u7410\uff0c\u5e0c\u671b\u901a\u8fc7\u5f15\u5165OAM\uff08kubevela\uff09\u5e73\u53f0\u964d\u4f4e\u914d\u7f6e\u3002 \u5176\u4ed6\u6536\u83b7 gitlab-ci.yml\u662f\u652f\u6301\u6bd4\u8f83\u590d\u6742\u7684shell\u811a\u672c\u5199\u6cd5\u7684\uff0c\u5982\uff1a - > if [ \"$CD_GIT_PATH\" == \"dev\" ] || [ \"$CD_GIT_PATH\" == \"testing\" ]; then echo y |argocd login $ARGOCD_IP --username $ARGCD_USER --password $ARGOCD_PASSWD --insecure argocd app sync ${APP_NAME}-${ENV_NAME} fi 2. \u5f53\u6267\u884cArgoCD sync\uff08\u901a\u8fc7argocd cli\uff09\u89e6\u53d1\u4e86\u4e0b\u9762\u9519\u8bef\u65f6\u6709\u53ef\u80fd\u662fk8s node\u8282\u70b9\u65f6\u95f4\u4e0d\u5bf9\uff08\u4eca\u5929\u9047\u5230\u7684\u4e0b\u9762\u95ee\u9898\u5c31\u662f\u670d\u52a1\u5668\u65f6\u95f4\u4e0d\u5bf9\uff09\uff1a time=\"2022-02-11T10:25:18Z\" level=fatal msg=\"rpc error: code = Unauthenticated desc = invalid session: token is not valid yet; wait 4m30.513298563s\"","title":"3.1. gitlab-ciz\u4e4bkustomize\u8e29\u5751"},{"location":"devops/gitlab-ci_kustomize%E8%B8%A9%E5%9D%91/#_1","text":"cicd\u914d\u7f6e\u6587\u4ef6\u5199\u7684\u8d8a\u6765\u8d8a\u591a\uff0c\u8d8a\u6765\u8d8a\u81c3\u80bf\u4e86\uff0c\u4eca\u5929\u60f3\u4f18\u5316\uff0c\u5c06\u516c\u5171\u914d\u7f6e\u62bd\u8c61\u51fa\u6765\uff0c\u6ca1\u60f3\u5230\u5728\u7b80\u5316kustomize\u914d\u7f6e\u65f6\u9047\u5230\u4e86ArgoCD App\u65e0\u6cd5\u751f\u6210\u7684\u95ee\u9898\uff0c\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u6700\u7ec8\u5b9a\u4f4d\u51fa\u539f\u6765\u662f\u6d4b\u8bd5\u73af\u5883\u96c6\u7fa4\u7684kubeconfig\u6ca1\u6709\u914d\u7f6e\u5bfc\u81f4\uff0c\u5728\u6b64\u505a\u4e2a\u8bb0\u5f55\u3002","title":"\u80cc\u666f"},{"location":"devops/gitlab-ci_kustomize%E8%B8%A9%E5%9D%91/#cicd","text":"\u901a\u8fc7gitlab-ci.yml\u914d\u7f6e\u6587\u4ef6\u5b9a\u4e49ci\u3001cd\u5168\u94fe\u8def\uff0c\u76ee\u524d\u5df2\u7ecf\u5c06\u5171\u6027\u7684\u914d\u7f6e\u72ec\u7acb\u51fa\u53bb\u4e86\uff08\u5982\uff1amaven\u6784\u5efa\u3001sonar\u626b\u63cf\u3001argocd app\u7684\u521b\u5efa\u7b49\uff09\u6d4b\u8bd5\u3001\u7ebf\u4e0a\u73af\u5883\u5404\u4e00\u5957k8s\u96c6\u7fa4\uff0cArgoCD\u90e8\u7f72\u5728\u6d4b\u8bd5\u73af\u5883k8s\u96c6\u7fa4\u4e2d\uff0c\u8be5ArgoCD\u540c\u65f6\u7ba1\u7406\u6d4b\u8bd5\u4e0e\u7ebf\u4e0ak8s\u96c6\u7fa4\u3002 \u95ee\u9898 \u4eca\u5929\u9047\u5230\u7684\u95ee\u9898\u662f\uff1a\u6d4b\u8bd5\u73af\u5883\u7684ArgoCD app\u53ef\u4ee5\u81ea\u52a8\u751f\u6210\uff0c\u7ebf\u4e0a\u73af\u5883\u7684ArgoCD app\u4e0d\u80fd\u751f\u6210\uff0c\u5e76\u4e14\u62a5\u4e86\u4e0b\u9762\u9519\u8bef\uff1a # \u6267\u884c\u547d\u4ee4 kustomize build | kubectl apply -f - # \u62a5\u4e86\u4e0b\u9762\u9519\u8bef error: json: cannot unmarshal object into Go struct field Kustomization.patchesStrategicMerge of type patch.StrategicMerge # \u4ee5\u53ca\u4e0b\u9762\u62a5\u9519 error: unable to recognize \"STDIN\": no matches for kind \"Application\" in version \"argoproj.io/v1alpha1\" \u6700\u5f00\u59cb\u4ee5\u4e3a\u662fArgoCD\u7684bug\uff0c\u5728\u8c37\u6b4c\u4e0a\u641c\u7d22\u4e86\u95ee\u9898\uff0c\u67e5\u5230\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u7684\u62a5\u9519\uff0c\u4e0d\u8fc7\u90a3\u4e2abug\u662fArgoCD1.2\u7248\u672c\u7684\uff0c\u6211\u4eec\u7528\u7684\u662f2.1\u7248\u672c\u7684\uff0c\u8be5bug\u65e9\u5df2\u4fee\u590d\uff0c\u6240\u4ee5\u6392\u9664\u4e86ArgoCD\u7684\u62a5\u9519\uff1b\u540e\u6765\u6000\u7591\u662fkustomize\u6f0f\u6d1e\uff0c\u5728\u7535\u8111\u4e0a\u6a21\u62df\u6267\u884ckustomize\u547d\u4ee4\u53ef\u4ee5\u751f\u6210ArgoCD app\u6587\u4ef6\uff0c\u5e76\u4e14kustomize\u76ee\u524d\u5df2\u7ecf\u5f88\u6210\u719f\u4e86\u4e0d\u53ef\u80fd\u4f1a\u6709\u8fd9\u79cdbug\uff0c\u6392\u9664\u4e86kustomize\u95ee\u9898\u3002 \u6700\u540e\u6211\u628a\u6574\u4e2ayaml\u6587\u4ef6\u9010\u884c\u8bfb\u4e86\u4e00\u904d\uff0c\u53d1\u73b0\u751f\u6210\u7ebf\u4e0ak8s\u7684ArgoCD App\u7684yaml\u7528\u7684\u662f\u7ebf\u4e0a\u73af\u5883k8s\u7684KUBECONFIG\u6587\u4ef6\uff0c\u7136\u800cArgoCD\u662f\u90e8\u7f72\u5728\u6d4b\u8bd5\u73af\u5883\u7684k8s\u96c6\u7fa4\u4e0a\uff0c\u8fd9\u5c31\u5bfc\u81f4kubectl\u8fde\u63a5\u4e0d\u4e86\u6d4b\u8bd5\u73af\u5883k8s\u96c6\u7fa4\uff0c\u4e5f\u5c31\u751f\u6210\u4e0d\u4e86\u7ebf\u4e0ak8s\u7684ArgoCD\u7684App\u3002 yaml\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a # java-deployment.yml # template # \u4e0b\u9762\u5e26\u201c#\u201d\u7684\u201cecho $IN_KUBE_CONFIG ...\u201d\u4e00\u884c\u662f\u4e4b\u524d\u6ca1\u6709\u52a0\u7684\uff0c\u8fd9\u4f1a\u5bfc\u81f4KUBECONFIG\u4f7f\u7528\u9519\u8bef\u3002 .deploy: image: ${DEV_REGISTRY_HOST}/basic/deploy-tools:v2.0 variables: GIT_STRATEGY: none ENV_NAME: dev-xx # replace CD_GIT_PATH: dev # replace K8S_CLUSTER: https://xxx # replace: $INSIDE_K8S_CLUSTER or $CCE2 APP_CONFIG: \"xxx\" # repalce CD_GIT_BRANCH: $ENV_NAME K8S_NS: ${BUSINESS_NAME}-${ENV_NAME} IN_HARBOR_SECRET: xxx-xx.yaml PROD_HARBOR_SECRET: xxx-xxx.yaml IN_KUBE_CONFIG: $kube_xxx PROD_KUBE_CONFIG: $kube_yyy tags: - k8s before_script: - git init - git config --global user.email \"gitlab@git.k8s.local\" - git config --global user.name \"GitLab CI/CD\" script: - git clone https://${CI_USERNAME}:${CI_PASSWORD}@$CD_REPO - cd $APP_NAME - git checkout -B $CD_GIT_BRANCH - sed -ri \"s/Tag[^*]*/Tag kube.${ENV_NAME}.${APP_NAME}/\" base/fluent-bit-sidecar-config.yaml - sed -i \"s@APP_CONFIG@${APP_CONFIG}@g\" base/jvm_opts_patch.yaml - sed -i \"s@NAMESERVERS@${DNS}@g\" base/custom_env_patch.yaml - cd overlays/$CD_GIT_PATH - > if [ \"$CD_GIT_PATH\" == \"pre\" ] || [ \"$CD_GIT_PATH\" == \"prod\" ]; then kustomize edit set image registry=${PROD_REGISTRY_HOST}/$REGISTRY_GROUP/$REGISTRY_IMAGE kustomize edit set image registry-fluent=${PROD_REGISTRY_HOST}/public/efk/fluent/fluent-bit:latest else kustomize edit set image registry=${DEV_REGISTRY_HOST}/$REGISTRY_GROUP/$REGISTRY_IMAGE kustomize edit set image registry-fluent=${DEV_REGISTRY_HOST}/public/efk/fluent/fluent-bit:latest fi - git add . - git commit -am \"[skip ci] image update tag:${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}(pipeline-hash)\" || /bin/true - git push origin $CD_GIT_BRANCH -f after_script: - echo \"ARGO_PROJ:$ARGO_PROJ\" - git clone https://${CI_USERNAME}:${CI_PASSWORD}@git.xx.cn/deployments/base.git - git checkout -B master - > if [ \"$CD_GIT_PATH\" == \"pre\" ] || [ \"$CD_GIT_PATH\" == \"prod\" ]; then echo $PROD_KUBE_CONFIG |base64 -d > $KUBECONFIG && export KUBECONFIG=$KUBECONFIG kubectl create namespace $K8S_NS || /bin/true kubectl apply -f base/java-base/$PROD_HARBOR_SECRET -n $K8S_NS # echo $IN_KUBE_CONFIG |base64 -d > $KUBECONFIG && export KUBECONFIG=$KUBECONFIG else echo $IN_KUBE_CONFIG |base64 -d > $KUBECONFIG && export KUBECONFIG=$KUBECONFIG kubectl create namespace $K8S_NS || /bin/true kubectl apply -f base/java-base/$IN_HARBOR_SECRET -n $K8S_NS fi - | cat <<EOF >./kustomization.yaml apiVersion: kustomize.config.k8s.io/v1beta1 kind: Kustomization resources: - base/java-base/argo-application.yaml patches: - patch: | - op: replace path: /metadata/name value: ${APP_NAME}-${ENV_NAME} - op: replace path: /metadata/labels/app value: ${APP_NAME} - op: replace path: /spec/project value: $ARGO_PROJ - op: replace path: /spec/source/repoURL value: https://$CD_REPO - op: replace path: /spec/source/targetRevision value: $CD_GIT_BRANCH - op: replace path: /spec/source/path value: overlays/$CD_GIT_PATH - op: replace path: /spec/destination/server value: $K8S_CLUSTER - op: replace path: /spec/destination/namespace value: $K8S_NS target: kind: Application EOF - kustomize build | kubectl apply -f - - > if [ \"$CD_GIT_PATH\" == \"dev\" ] || [ \"$CD_GIT_PATH\" == \"testing\" ]; then echo y |argocd login $ARGOCD_IP --username $ARGCD_USER --password $ARGOCD_PASSWD --insecure argocd app sync ${APP_NAME}-${ENV_NAME} fi","title":"CICD\u67b6\u6784\u7b80\u4ecb"},{"location":"devops/gitlab-ci_kustomize%E8%B8%A9%E5%9D%91/#_2","text":"\u4e8b\u60c5\u672c\u8eab\u7684\u601d\u8003 \u95ee\u9898\u867d\u5c0f\u5374\u4e5f\u82b1\u4e86\u4e0d\u5c11\u65f6\u95f4\u5728\u6392\u67e5\u4e0a\uff0c\u9020\u6210\u8fd9\u4e2a\u95ee\u9898\u7684\u539f\u56e0\u662f\u914d\u7f6e\u6587\u4ef6\u592a\u4e71\uff0c\u8fd9\u662f\u4e4b\u524d\u6211\u4e3a\u4e86\u8d76\u8fdb\u5ea6\u7ed9\u81ea\u5df1\u6316\u7684\u5751\u3002 \u914d\u7f6e\u7f3a\u5c11\u6ce8\u91ca\uff0c\u8fd9\u4e5f\u7ed9\u5b9a\u4f4d\u95ee\u9898\u5e26\u6765\u4e86\u56f0\u96be\u3002 \u914d\u7f6e\u6587\u4ef6\u7684\u601d\u8003 \u914d\u7f6e\u6587\u4ef6\u8f83\u591a\uff0c\u53d1\u7248\u914d\u7f6e\u5f88\u591a\uff1a\u5f00\u53d1\u4e0e\u6d4b\u8bd5\u73af\u5883\u75281\u4e2a\u914d\u7f6e\uff0cuat\u73af\u5883\u75281\u5404\u914d\u7f6e\uff0c\u9884\u53d1\u4e0e\u751f\u4ea7\u73af\u5883\u75281\u4e2a\u914d\u7f6e\uff0c\u5404\u73af\u5883\u5927\u90e8\u5206\u914d\u7f6e\u76f8\u540c\uff0c\u4f46\u6070\u597d\u662f\u90a3\u4e9b\u5c11\u90e8\u5206\u4e0d\u540c\u7684\u914d\u7f6e\u7ed9\u6211\u4eca\u5929\u7684\u4f18\u5316\u57cb\u4e86\u5751\u3002 \u4e0a\u9762\u7684yaml\u6587\u4ef6\u4ecd\u6709\u5730\u65b9\u9700\u8981\u4f18\u5316\uff0c\u8fd8\u53ef\u4ee5\u5c06\u5171\u6027\u90e8\u5206\u62bd\u8c61\u6210\u516c\u5171\u90e8\u5206\u3002 \u5373\u4f7f\u7528\u4e86kustomize\u5de5\u5177\u7ba1\u7406\u914d\u7f6e\uff0ccicd\u5168\u94fe\u8def\u7684\u914d\u7f6e\u4ecd\u7136\u5f88\u591a\u5f88\u7e41\u7410\uff0c\u5e0c\u671b\u901a\u8fc7\u5f15\u5165OAM\uff08kubevela\uff09\u5e73\u53f0\u964d\u4f4e\u914d\u7f6e\u3002 \u5176\u4ed6\u6536\u83b7 gitlab-ci.yml\u662f\u652f\u6301\u6bd4\u8f83\u590d\u6742\u7684shell\u811a\u672c\u5199\u6cd5\u7684\uff0c\u5982\uff1a - > if [ \"$CD_GIT_PATH\" == \"dev\" ] || [ \"$CD_GIT_PATH\" == \"testing\" ]; then echo y |argocd login $ARGOCD_IP --username $ARGCD_USER --password $ARGOCD_PASSWD --insecure argocd app sync ${APP_NAME}-${ENV_NAME} fi 2. \u5f53\u6267\u884cArgoCD sync\uff08\u901a\u8fc7argocd cli\uff09\u89e6\u53d1\u4e86\u4e0b\u9762\u9519\u8bef\u65f6\u6709\u53ef\u80fd\u662fk8s node\u8282\u70b9\u65f6\u95f4\u4e0d\u5bf9\uff08\u4eca\u5929\u9047\u5230\u7684\u4e0b\u9762\u95ee\u9898\u5c31\u662f\u670d\u52a1\u5668\u65f6\u95f4\u4e0d\u5bf9\uff09\uff1a time=\"2022-02-11T10:25:18Z\" level=fatal msg=\"rpc error: code = Unauthenticated desc = invalid session: token is not valid yet; wait 4m30.513298563s\"","title":"\u51e0\u70b9\u601d\u8003"},{"location":"k8s/","text":"\u4e3b\u8981\u8bb0\u5f55k8s\u7684\u5b66\u4e60\u4ee5\u53ca\u5de5\u4f5c\u7ecf\u9a8c\u603b\u7ed3\u3002 \u00b6 \u5185\u5bb9\u4e3b\u8981\u5305\u62ec\u4e0b\u9762\u51e0\u4e2a\u90e8\u5206\uff1a k8s\u7684\u6838\u5fc3\u539f\u7406\uff0c\u5305\u62ec\u76f8\u5173\u7ec4\u4ef6\u3001\u6e90\u7801\u7684\u7814\u7a76\u603b\u7ed3\u3002 k8s\u4f7f\u7528\u8e29\u5751\u8bb0\u5f55\uff0c\u5305\u62ec\u4e91\u5382\u5546\u6258\u7ba1\u7684k8s\u96c6\u7fa4\u4f7f\u7528\u7ecf\u9a8c\u3002","title":"1. \u6982\u89c8"},{"location":"k8s/#k8s","text":"\u5185\u5bb9\u4e3b\u8981\u5305\u62ec\u4e0b\u9762\u51e0\u4e2a\u90e8\u5206\uff1a k8s\u7684\u6838\u5fc3\u539f\u7406\uff0c\u5305\u62ec\u76f8\u5173\u7ec4\u4ef6\u3001\u6e90\u7801\u7684\u7814\u7a76\u603b\u7ed3\u3002 k8s\u4f7f\u7528\u8e29\u5751\u8bb0\u5f55\uff0c\u5305\u62ec\u4e91\u5382\u5546\u6258\u7ba1\u7684k8s\u96c6\u7fa4\u4f7f\u7528\u7ecf\u9a8c\u3002","title":"\u4e3b\u8981\u8bb0\u5f55k8s\u7684\u5b66\u4e60\u4ee5\u53ca\u5de5\u4f5c\u7ecf\u9a8c\u603b\u7ed3\u3002"},{"location":"k8s/cce/","text":"1. \u534e\u4e3a\u4e91\u673a\u623f\u4e0d\u652f\u6301\u67d0\u4e9b\u786c\u76d8\u683c\u5f0f\u95ee\u9898\u3002 \u00b6 \u5982\uff1a\u4e0a\u6d77\u4e8c\u533a\u4e0d\u652f\u6301SATA\u4e86\uff0c\u9700\u8981\u5728yaml\u6587\u4ef6\u4e2d\u6307\u5b9a\u4f7f\u7528\u5176\u4ed6\u683c\u5f0f annotations: everest.io/disk-volume-type: SSD \u540c\u65f6\u6307\u5b9astorageclass\uff1a storageClassName: csi-disk 2. \u5757\u5b58\u50a8\u6302\u76d8\u95ee\u9898\uff08\u8fd9\u5176\u5b9e\u4e0d\u662f\u95ee\u9898\uff0c\u4e5f\u4e0d\u662fCCE\u7684\u95ee\u9898\uff0c\u5728\u6b64\u8bb0\u5f55\uff09\u3002 \u00b6 \u7ed9mysql5.7\u6302\u8f7d\u4e91\u786c\u76d8\uff08\u5757\u5b58\u50a8\uff09\u65f6\uff0c\u8be5\u5b58\u50a8\u4f1a\u88ab\u683c\u5f0f\u5316\u5e76\u5728\u5b58\u50a8\u76ee\u5f55\u4e2d\u6dfb\u52a0\u201clost+found\u201d\u76ee\u5f55\uff0cmysql5.7\u4f1a\u8ba4\u4e3a\u8be5\u5b58\u50a8\u6709\u6570\u636e\u800c\u7ec8\u6b62\u521d\u59cb\u5316\uff0c\u5bfc\u81f4mysql\u65e0\u6cd5\u90e8\u7f72\u6210\u529f\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\uff1a\u5728spec.containers\u4e2d\u6dfb\u52a0\u5ffd\u7565\u201clost+found\u201d\u7684\u53c2\u6570\uff1a spec: containers: - args: - --ignore-db-dir=lost+found","title":"3.1. CCE"},{"location":"k8s/cce/#1","text":"\u5982\uff1a\u4e0a\u6d77\u4e8c\u533a\u4e0d\u652f\u6301SATA\u4e86\uff0c\u9700\u8981\u5728yaml\u6587\u4ef6\u4e2d\u6307\u5b9a\u4f7f\u7528\u5176\u4ed6\u683c\u5f0f annotations: everest.io/disk-volume-type: SSD \u540c\u65f6\u6307\u5b9astorageclass\uff1a storageClassName: csi-disk","title":"1. \u534e\u4e3a\u4e91\u673a\u623f\u4e0d\u652f\u6301\u67d0\u4e9b\u786c\u76d8\u683c\u5f0f\u95ee\u9898\u3002"},{"location":"k8s/cce/#2-cce","text":"\u7ed9mysql5.7\u6302\u8f7d\u4e91\u786c\u76d8\uff08\u5757\u5b58\u50a8\uff09\u65f6\uff0c\u8be5\u5b58\u50a8\u4f1a\u88ab\u683c\u5f0f\u5316\u5e76\u5728\u5b58\u50a8\u76ee\u5f55\u4e2d\u6dfb\u52a0\u201clost+found\u201d\u76ee\u5f55\uff0cmysql5.7\u4f1a\u8ba4\u4e3a\u8be5\u5b58\u50a8\u6709\u6570\u636e\u800c\u7ec8\u6b62\u521d\u59cb\u5316\uff0c\u5bfc\u81f4mysql\u65e0\u6cd5\u90e8\u7f72\u6210\u529f\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\uff1a\u5728spec.containers\u4e2d\u6dfb\u52a0\u5ffd\u7565\u201clost+found\u201d\u7684\u53c2\u6570\uff1a spec: containers: - args: - --ignore-db-dir=lost+found","title":"2. \u5757\u5b58\u50a8\u6302\u76d8\u95ee\u9898\uff08\u8fd9\u5176\u5b9e\u4e0d\u662f\u95ee\u9898\uff0c\u4e5f\u4e0d\u662fCCE\u7684\u95ee\u9898\uff0c\u5728\u6b64\u8bb0\u5f55\uff09\u3002"},{"location":"k8s/k8s%E6%9E%B6%E6%9E%84%E5%9F%BA%E7%A1%80/","text":"k8s\u8d77\u6e90 \u00b6 k8s\u6e90\u81ea\u8c37\u6b4cBorg\u7cfb\u7edf\uff0c\u8981\u60f3\u7406\u89e3k8s\u4e0d\u5f97\u4e0d\u4e86\u89e3Borg\u3002 Borg\u7684paper\u6587\u6863\uff1a http://static.googleusercontent.com/media/research.google.com/zh-CN//pubs/archive/43438.pdf \u4e2d\u6587\u7ffb\u8bd1\uff1a https://zhuanlan.zhihu.com/p/55970564 Borg\u7684\u6700\u5927\u7279\u6027\u662f\uff1a \u7269\u7406\u8d44\u6e90\u5229\u7528\u7387\u9ad8 \u670d\u52a1\u5668\u5171\u4eab\uff0c\u8fdb\u7a0b\u7ea7\u522b\u9694\u79bb \u9ad8\u53ef\u7528\uff0c\u6545\u969c\u6062\u590d\u65f6\u95f4\u77ed \u8c03\u5ea6\u7b56\u7565\u7075\u6d3b\u7b49 \u4e00\u4e2a\u96c6\u7fa4\u53ef\u4ee5\u7ba1\u7406\u6570\u4e07\u53f0\u670d\u52a1\u5668 \u6b64\u5916\uff0cBorg\u5c06\u8d44\u6e90\u5212\u5206\u6210\u5728\u7ebf\u4efb\u52a1\u548c\u79bb\u7ebf\u4efb\u52a12\u79cd\uff0c\u5728\u7ebf\u4efb\u52a1\u5728\u8d44\u6e90\u4e0d\u8db3\u65f6\u53ef\u4ee5\u62a2\u5360\u79bb\u7ebf\u4efb\u52a1\u8d44\u6e90\uff0c\u5728\u96c6\u7fa4\u8d44\u6e90\u5145\u8db3\u65f6\u79bb\u7ebf\u4efb\u52a1\u53ef\u4ee5\u7ee7\u7eed\u8dd1\u4efb\u52a1\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u5347\u8d44\u6e90\u5229\u7528\u7387\u3002 Borg\u67b6\u6784 \u00b6 Borg\u67b6\u6784\u548ck8s\u67b6\u6784\u5f88\u50cf\uff0c\u4f46\u4e5f\u6709\u5dee\u522b\uff0c\u5982\uff1a Borg\u7684\u5b58\u50a8\u7528\u7684\u662fPaxos\u534f\u8bae\uff0c\u8be5\u534f\u8bae\u8f83\u590d\u6742\uff1bk8s\u5b58\u50a8\uff08etcd\uff09\u7528\u7684\u662fraft\u534f\u8bae\uff0c\u8be5\u534f\u8bae\u76f8\u5bf9\u7b80\u5355\uff1b 1\u4e2aBorg\u96c6\u7fa4\u79f0\u547ccell\uff1b1\u4e2ak8s\u96c6\u7fa4\u79f0\u547ccluster\u7b49\uff1b \u5355\u4e2aBorg\u96c6\u7fa4\u53ef\u4ee5\u7ba1\u7406\u6570\u4e07\u53f0\u670d\u52a1\u5668\uff0c\u800c\u5355\u4e2ak8s\u96c6\u7fa4\u6700\u591a\u53ea\u80fd\u7ba1\u74065000\u53f0\u673a\u5668\uff0c\u867d\u7136\u6709\u4e9b\u4e91\u5382\u5546\u5bf9k8s\u96c6\u7fa4\u505a\u4e86\u4f18\u5316\u53ef\u4ee5\u7ba1\u7406\u6570\u4e07\u53f0\u673a\u5668\uff0c\u5176\u6539\u9020\u540e\u7684k8s\u7ba1\u7406\u89c4\u6a21\u4ecd\u7136\u4e0d\u53caBorg\uff1b Borg\u5bf9\u670d\u52a1\u5668\u7ba1\u7406\u7684\u8d44\u6e90\u4f7f\u7528\u7387\u8d85\u9ad8\uff08\u636e\u8bf4\u8fbe\u5230\u4e8660%+\uff09\uff0ck8s\u5bf9\u673a\u5668\u7684\u7ba1\u7406\u8d44\u6e90\u7387\u4e0d\u9ad8\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u501f\u52a9\u751f\u6001\u7ec4\u4ef6\u63d0\u5347\u8be5\u80fd\u529b\u3002 ...","title":"2.1. \u67b6\u6784\u7b80\u4ecb"},{"location":"k8s/k8s%E6%9E%B6%E6%9E%84%E5%9F%BA%E7%A1%80/#k8s","text":"k8s\u6e90\u81ea\u8c37\u6b4cBorg\u7cfb\u7edf\uff0c\u8981\u60f3\u7406\u89e3k8s\u4e0d\u5f97\u4e0d\u4e86\u89e3Borg\u3002 Borg\u7684paper\u6587\u6863\uff1a http://static.googleusercontent.com/media/research.google.com/zh-CN//pubs/archive/43438.pdf \u4e2d\u6587\u7ffb\u8bd1\uff1a https://zhuanlan.zhihu.com/p/55970564 Borg\u7684\u6700\u5927\u7279\u6027\u662f\uff1a \u7269\u7406\u8d44\u6e90\u5229\u7528\u7387\u9ad8 \u670d\u52a1\u5668\u5171\u4eab\uff0c\u8fdb\u7a0b\u7ea7\u522b\u9694\u79bb \u9ad8\u53ef\u7528\uff0c\u6545\u969c\u6062\u590d\u65f6\u95f4\u77ed \u8c03\u5ea6\u7b56\u7565\u7075\u6d3b\u7b49 \u4e00\u4e2a\u96c6\u7fa4\u53ef\u4ee5\u7ba1\u7406\u6570\u4e07\u53f0\u670d\u52a1\u5668 \u6b64\u5916\uff0cBorg\u5c06\u8d44\u6e90\u5212\u5206\u6210\u5728\u7ebf\u4efb\u52a1\u548c\u79bb\u7ebf\u4efb\u52a12\u79cd\uff0c\u5728\u7ebf\u4efb\u52a1\u5728\u8d44\u6e90\u4e0d\u8db3\u65f6\u53ef\u4ee5\u62a2\u5360\u79bb\u7ebf\u4efb\u52a1\u8d44\u6e90\uff0c\u5728\u96c6\u7fa4\u8d44\u6e90\u5145\u8db3\u65f6\u79bb\u7ebf\u4efb\u52a1\u53ef\u4ee5\u7ee7\u7eed\u8dd1\u4efb\u52a1\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u5347\u8d44\u6e90\u5229\u7528\u7387\u3002","title":"k8s\u8d77\u6e90"},{"location":"k8s/k8s%E6%9E%B6%E6%9E%84%E5%9F%BA%E7%A1%80/#borg","text":"Borg\u67b6\u6784\u548ck8s\u67b6\u6784\u5f88\u50cf\uff0c\u4f46\u4e5f\u6709\u5dee\u522b\uff0c\u5982\uff1a Borg\u7684\u5b58\u50a8\u7528\u7684\u662fPaxos\u534f\u8bae\uff0c\u8be5\u534f\u8bae\u8f83\u590d\u6742\uff1bk8s\u5b58\u50a8\uff08etcd\uff09\u7528\u7684\u662fraft\u534f\u8bae\uff0c\u8be5\u534f\u8bae\u76f8\u5bf9\u7b80\u5355\uff1b 1\u4e2aBorg\u96c6\u7fa4\u79f0\u547ccell\uff1b1\u4e2ak8s\u96c6\u7fa4\u79f0\u547ccluster\u7b49\uff1b \u5355\u4e2aBorg\u96c6\u7fa4\u53ef\u4ee5\u7ba1\u7406\u6570\u4e07\u53f0\u670d\u52a1\u5668\uff0c\u800c\u5355\u4e2ak8s\u96c6\u7fa4\u6700\u591a\u53ea\u80fd\u7ba1\u74065000\u53f0\u673a\u5668\uff0c\u867d\u7136\u6709\u4e9b\u4e91\u5382\u5546\u5bf9k8s\u96c6\u7fa4\u505a\u4e86\u4f18\u5316\u53ef\u4ee5\u7ba1\u7406\u6570\u4e07\u53f0\u673a\u5668\uff0c\u5176\u6539\u9020\u540e\u7684k8s\u7ba1\u7406\u89c4\u6a21\u4ecd\u7136\u4e0d\u53caBorg\uff1b Borg\u5bf9\u670d\u52a1\u5668\u7ba1\u7406\u7684\u8d44\u6e90\u4f7f\u7528\u7387\u8d85\u9ad8\uff08\u636e\u8bf4\u8fbe\u5230\u4e8660%+\uff09\uff0ck8s\u5bf9\u673a\u5668\u7684\u7ba1\u7406\u8d44\u6e90\u7387\u4e0d\u9ad8\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u501f\u52a9\u751f\u6001\u7ec4\u4ef6\u63d0\u5347\u8be5\u80fd\u529b\u3002 ...","title":"Borg\u67b6\u6784"}]}